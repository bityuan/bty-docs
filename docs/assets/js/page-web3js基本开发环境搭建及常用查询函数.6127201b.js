(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{636:function(e,t,s){"use strict";s.r(t);var a=s(1),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"web3-js-基本开发环境搭建及常用查询函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web3-js-基本开发环境搭建及常用查询函数"}},[e._v("#")]),e._v(" web3.js 基本开发环境搭建及常用查询函数")]),e._v(" "),s("h3",{attrs:{id:"_1-环境准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-环境准备"}},[e._v("#")]),e._v(" 1.环境准备")]),e._v(" "),s("ul",[s("li",[e._v("安装 nodejs")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("node -v\nnpm -v\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("ul",[s("li",[e._v("安装 Visual Studio Code")]),e._v(" "),s("li",[e._v("在 vs code 中安装 code runner 插件")])]),e._v(" "),s("h3",{attrs:{id:"_2-安装-web3-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装-web3-js"}},[e._v("#")]),e._v(" 2. 安装 web3.js")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm install web3\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"_3-web3-js-常用查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-web3-js-常用查询"}},[e._v("#")]),e._v(" 3. web3.js 常用查询")]),e._v(" "),s("p",[e._v("web3.js 中文文档： https://learnblockchain.cn/docs/web3.js/")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 连接区块链\nvar Web3 = require('web3');\nvar web3 = new Web3(new Web3.providers.HttpProvider(\"区块链接口\"));\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("以下列举的都是适用于 chain33 的常用查询接口")]),e._v(" "),s("ul",[s("li",[e._v("Web3.modules: 返回包含所有子模块类的对象，主要用到 Eth，Net，Personal 子模块，Shh, Bzz 这些用不上\n"),s("ul",[s("li",[e._v("Eth: 用来和区块链网络交互")]),e._v(" "),s("li",[e._v("Net: 网络属性相关")]),e._v(" "),s("li",[e._v("Persion: 区块链账户相关")])])]),e._v(" "),s("li",[e._v("Web3.version: 所引用的 Web3 的版本号")]),e._v(" "),s("li",[e._v("web3.currentProvider：返回当前通信服务提供器")]),e._v(" "),s("li",[e._v("web3.eth.currentProvider：同上，chain33 兼容 eth 的连接")]),e._v(" "),s("li",[e._v("web3.eth.getChainId(): 返回区块链节点的 chainid")]),e._v(" "),s("li",[e._v("web3.eth.net.getId(): 获取当前网络的 ID")]),e._v(" "),s("li",[e._v("web3.eth.net.isListening(): 当前节点是否处于监听连接状态，是的话返回 true")]),e._v(" "),s("li",[e._v("web3.eth.net.getPeerCount(): 获取对等节点的数量")]),e._v(" "),s("li",[e._v("web3.eth.net.isListening(): 当前节点是否处于监听连接状态，是的话返回 true")]),e._v(" "),s("li",[e._v("web3.eth.getHashrate(): 返回区块的 difficulty 值")]),e._v(" "),s("li",[e._v("web3.eth.getGasPrice(): 返回当前 gas 价格")]),e._v(" "),s("li",[e._v("web3.eth.getBlockNumber(): 返回当前最大的区块高度")]),e._v(" "),s("li",[e._v('web3.eth.getBlock("区块高度/区块 hash 值", true/false): 返回区块信息,true/false: 要不要带交易详情')]),e._v(" "),s("li",[e._v("web3.eth.getBlockTransactionCount(区块高度): 返回对应区块中交易数量")]),e._v(" "),s("li",[e._v('web3.eth.getTransaction("交易 hash"): 返回对应交易 hash 的交易对象')]),e._v(" "),s("li",[e._v('web3.eth.getTransactionReceipt("交易 hash"): 返回交易收据')]),e._v(" "),s("li",[e._v('web3.eth.getTransactionCount("要查询的交易地址"): 返回交易数量')])])])}),[],!1,null,null,null);t.default=n.exports}}]);