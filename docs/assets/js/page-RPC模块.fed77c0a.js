(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{574:function(t,s,a){"use strict";a.r(s);var e=a(1),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"rpc模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rpc模块"}},[t._v("#")]),t._v(" RPC模块")]),t._v(" "),a("h2",{attrs:{id:"模块介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块介绍"}},[t._v("#")]),t._v(" 模块介绍")]),t._v(" "),a("p",[t._v("RPC，即Remote Procedure Call（远程过程调用），RPC模块主要为外部程序提供交易构造及发送，区块、交易以及其他信息查询接口。")]),t._v(" "),a("p",[t._v("RPC模块同时支持grpc和jsonrpc两种接口，其他进程既可以调用grpc接口，也可以调用jrpc接口，一般地，如果某进程能够访问chain33内部数据结构构造数据，优先采用grpc接口，反之，推荐使用jrpc接口。")]),t._v(" "),a("h2",{attrs:{id:"rpc逻辑架构与交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rpc逻辑架构与交互"}},[t._v("#")]),t._v(" RPC逻辑架构与交互")]),t._v(" "),a("p",[t._v('RPC模块引用了"grpc"和"net/rpc"包，在系统初始化时，注册了服务处理server，对所有的rpc调用方法进行注册。')]),t._v(" "),a("p",[t._v("RPC模块根据配置文件，绑定相应的端口，在底层，实际是对tcp端口进行监听，一旦收到请求消息，根据消息数据里的方法名，调用之前注册的方法进行响应。")]),t._v(" "),a("p",[t._v("RPC模块实例化了一个QueueProtocol，来实现与系统中其他模块交互，例如实际的区块/交易查询都是通过消息与BlockChain模块交互实现的，关于消息队列可以参考《Queue模块》介绍。")]),t._v(" "),a("h2",{attrs:{id:"数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),a("p",[t._v("RPC定义了GrpcServer和JSONRPCServer两个结构，分别为grpc和jrpc服务，从以下结构中可以看出，在系统内部仍然是通过Queue来交互的。")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" channelClient "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tclient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QueueProtocolAPI\n\taccountdb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("account"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DB\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Chain33 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcli channelClient\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Grpc "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcli channelClient\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Grpcserver "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgrpc Grpc\n\ts    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("grpc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Server\n\tl    net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Listener\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//addr string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" JSONRPCServer "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tjrpc Chain33\n\ts    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rpc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Server\n\tl    net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Listener\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//addr string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("grpc提供的各项接口，通过rpc.proto定义，与一般数据有别的是，这里定义的数据类型为service，而非message。")])]),t._v(" "),a("li",[a("p",[t._v("jrpc提供的各项接口，在jrpchandler.go中单独定义。")])])]),t._v(" "),a("h2",{attrs:{id:"优化功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化功能"}},[t._v("#")]),t._v(" 优化功能")]),t._v(" "),a("p",[t._v("RPC提供了remoteIP白名单和调用方法白名单/黑名单的功能，在rpc响应请求数据时，能够根据各项白名单/黑名单配置对请求进行过滤。")]),t._v(" "),a("h2",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rpc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\njrpcBindAddr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:8801"')]),t._v("\ngrpcBindAddr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:8802"')]),t._v("\nwhitelist"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\njrpcFuncWhitelist"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ngrpcFuncWhitelist"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("配置文件中[rpc]子项用于配置rpc，目前使用的配置主要有jrpc和grpc的绑定地址，在实际环境中需要保证地址及端口正确配置。")])]),t._v(" "),a("li",[a("p",[t._v("whitelist/jrpcFuncWhitelist/grpcFuncWhitelist用于配置各项白/黑名单，无特殊需求时保持默认即可。")])])]),t._v(" "),a("h2",{attrs:{id:"jrpc接口列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jrpc接口列表"}},[t._v("#")]),t._v(" jrpc接口列表")]),t._v(" "),a("p",[t._v("DAPP推荐使用jrpc接口，chain33目前已经支持大量jrpc接口，基本能够满足日常开发的各类需求，由于数据很多，此处列出接口名，具体参数及说明请参照jrpc接口文档。")]),t._v(" "),a("h3",{attrs:{id:"钱包接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#钱包接口"}},[t._v("#")]),t._v(" 钱包接口")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("上锁 Lock")])]),t._v(" "),a("li",[a("p",[t._v("解锁 UnLock")])]),t._v(" "),a("li",[a("p",[t._v("设置/修改密码 SetPasswd")])]),t._v(" "),a("li",[a("p",[t._v("设置标签 SetLabl")])]),t._v(" "),a("li",[a("p",[t._v("创建账户 NewAccount")])]),t._v(" "),a("li",[a("p",[t._v("获取账户列表 GetAccounts")])]),t._v(" "),a("li",[a("p",[t._v("合并账户余额 MergeBalance")])]),t._v(" "),a("li",[a("p",[t._v("设置交易费用 SetTxFee")])]),t._v(" "),a("li",[a("p",[t._v("交易 SendToAddress")])]),t._v(" "),a("li",[a("p",[t._v("导入私钥 ImportPrivKey")])]),t._v(" "),a("li",[a("p",[t._v("获取钱包交易列表 WalletTxList")])]),t._v(" "),a("li",[a("p",[t._v("获取Ticket 的数量 GetTicketCount")])]),t._v(" "),a("li",[a("p",[t._v("导出私钥 dumpprivkey")])]),t._v(" "),a("li",[a("p",[t._v("交易签名 SignRawTx")])]),t._v(" "),a("li",[a("p",[t._v("创建绑定挖矿交易 CreateBindMiner")])]),t._v(" "),a("li",[a("p",[t._v("获取钱包状态 GetWalletStatus")])])]),t._v(" "),a("h3",{attrs:{id:"mempool接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mempool接口"}},[t._v("#")]),t._v(" mempool接口")]),t._v(" "),a("ul",[a("li",[t._v("获取 GetMempool")])]),t._v(" "),a("h3",{attrs:{id:"交易接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交易接口"}},[t._v("#")]),t._v(" 交易接口")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("发送交易 SendTransaction")])]),t._v(" "),a("li",[a("p",[t._v("构造交易 CreateTransaction")])]),t._v(" "),a("li",[a("p",[t._v("发送签名后的交易 SendRawTransaction")])]),t._v(" "),a("li",[a("p",[t._v("构造并发送不收手续费交易CreateNoBalanceTransaction")])]),t._v(" "),a("li",[a("p",[t._v("根据哈希查询交易信息 QueryTransaction")])]),t._v(" "),a("li",[a("p",[t._v("根据地址获取交易信息 GetTxByAddr")])]),t._v(" "),a("li",[a("p",[t._v("根据哈希数组批量获取交易信息 GetTxByHashes")])]),t._v(" "),a("li",[a("p",[t._v("根据哈希获取交易的字符串 GetHexTxByHash")])]),t._v(" "),a("li",[a("p",[t._v("获取地址相关摘要信息 GetAddrOverview")])]),t._v(" "),a("li",[a("p",[t._v("将合约名转化成chain33中的实际地址ConvertExectoAddr")])]),t._v(" "),a("li",[a("p",[t._v("构造交易组 CreateRawTxGroup")])])]),t._v(" "),a("h3",{attrs:{id:"区块链接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区块链接口"}},[t._v("#")]),t._v(" 区块链接口")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("获取版本 Version")])]),t._v(" "),a("li",[a("p",[t._v("获取区间区块 GetBlocks")])]),t._v(" "),a("li",[a("p",[t._v("获取最新的区块头 GetLastHeader")])]),t._v(" "),a("li",[a("p",[t._v("获取区间区块头 GetHeaders")])]),t._v(" "),a("li",[a("p",[t._v("获取区块的 hash 值 GetBlockHash")])]),t._v(" "),a("li",[a("p",[t._v("获取区块的详细信息 GetBlockOverview")])]),t._v(" "),a("li",[a("p",[t._v("获取最新区块序号 GetLastBlockSequence")])]),t._v(" "),a("li",[a("p",[t._v("获取区间区块序号 GetBlockSequences")])]),t._v(" "),a("li",[a("p",[t._v("获取Hash列表区块 GetBlockByHashes")])])]),t._v(" "),a("h3",{attrs:{id:"同步状态接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步状态接口"}},[t._v("#")]),t._v(" 同步状态接口")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("获取远程节点列表 GetPeerInfo")])]),t._v(" "),a("li",[a("p",[t._v("查询节点状态 GetNetInfo")])]),t._v(" "),a("li",[a("p",[t._v("查询时间状态 GetTimeStatus")])]),t._v(" "),a("li",[a("p",[t._v("查询同步状态 IsSync")])])]),t._v(" "),a("h3",{attrs:{id:"钱包seed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#钱包seed"}},[t._v("#")]),t._v(" 钱包SEED")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("生成随机的seed GenSeed")])]),t._v(" "),a("li",[a("p",[t._v("保存seed并用密码加密 SaveSeed")])]),t._v(" "),a("li",[a("p",[t._v("通过钱包密码获取钱包的seed原文 GetSeed")])])]),t._v(" "),a("h3",{attrs:{id:"查询余额"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询余额"}},[t._v("#")]),t._v(" 查询余额")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("查询地址余额 GetBalance")])]),t._v(" "),a("li",[a("p",[t._v("查询地址token余额 GetTokenBalance")])]),t._v(" "),a("li",[a("p",[t._v("查询地址所有合约地址余额 GetAllExecBalance")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);