(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{243:function(t,s,a){t.exports=a.p+"assets/img/Mempool_Template_interaction.e50d3f6d.png"},581:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"mempool模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mempool模块"}},[t._v("#")]),t._v(" Mempool模块")]),t._v(" "),n("p",[t._v("Mempool模块，即交易缓存池，主要目的是为了解决共识模块可能比RPC模块速度慢的问题。")]),t._v(" "),n("p",[t._v("Mempool模块负责对接收的交易做初步合法性的校验，过滤掉一些非法的交易；同时对交易发送者做流量限制，防止同一地址发送太过频繁。")]),t._v(" "),n("h2",{attrs:{id:"mempool模块交互"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mempool模块交互"}},[t._v("#")]),t._v(" Mempool模块交互")]),t._v(" "),n("p",[n("img",{attrs:{src:a(243),alt:"Mempool模块交互"}})]),t._v(" "),n("blockquote",[n("p",[t._v("Mempool与Blockchain的交互:")])]),t._v(" "),n("ul",[n("li",[t._v("当有新的区块成写入后，Blockchain会给Mempool发送"),n("code",[t._v("types.EventAddBlock")]),t._v("消息事件，通知Mempool已经有block成功写入了；Mempool收到后，会触发"),n("code",[t._v("mem.RemoveTxsOfBlock(block)")]),t._v("方法，移除Mempool中已被Blockchain打包的tx。")]),t._v(" "),n("li",[t._v("当有区块回退时，Blockchain会给Mempool发送一条"),n("code",[t._v("types.EventDelBlock")]),t._v("消息类型的消息，通知Mempool有区块需要回退,会触发"),n("code",[t._v("mem.setHeader()")]),t._v("和"),n("code",[t._v("mem.DelBlock()")]),t._v("方法，把相应区块内的交易重新加回Mempool中。")])]),t._v(" "),n("blockquote",[n("p",[t._v("Mempool与consensus的交互:")])]),t._v(" "),n("ul",[n("li",[t._v("区块打包时，consensus会主动发送一个"),n("code",[t._v("types.EventTxList")]),t._v("消息去触发"),n("code",[t._v("mem.GetTxList()")]),t._v("方法，获取需要打包的交易列表。")]),t._v(" "),n("li",[t._v("区块打包时，当consensus给Blockchain发送"),n("code",[t._v("types.EventAddBlockDetail")]),t._v("消息事件，有新的区块需要写入；如果新区块写成功了，Blockchain会给consensus返回相应的     "),n("code",[t._v("blockdetail")]),t._v("信息，根据这个和原始block找出错误交易列表，然后往Mempool发送"),n("code",[t._v("types.EventDelTxList")]),t._v("消息，去删除相应的错误交易。")])]),t._v(" "),n("blockquote",[n("p",[t._v("Mempool与P2P的交互:")])]),t._v(" "),n("ul",[n("li",[t._v("如果Mempool收到RPC发送过来的tx，会经过一系列校验检查；如果校验通过，就会把合法tx通过P2P模块广播出去。")])]),t._v(" "),n("blockquote",[n("p",[t._v("Mempool与RPC的交互:")])]),t._v(" "),n("ul",[n("li",[t._v("Mempool中给RPC提供了"),n("code",[t._v("GetLastMempool()")]),t._v("、"),n("code",[t._v("GetMempool()")]),t._v("、"),n("code",[t._v("SendTx()")]),t._v("3个接口，供外部调用。")])]),t._v(" "),n("h2",{attrs:{id:"mempool交易校验"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mempool交易校验"}},[t._v("#")]),t._v(" Mempool交易校验")]),t._v(" "),n("p",[t._v("Mempool中的交易校验很严格，主要检查的地方有：")]),t._v(" "),n("ul",[n("li",[t._v("检查交易是否为空，手续费是否满足系统设置的最小手续费要求。")]),t._v(" "),n("li",[t._v("检查交易是单笔交易，还是交易组。")]),t._v(" "),n("li",[t._v("检查接收地址是否合法。")]),t._v(" "),n("li",[t._v("检查交易是否为重复交易。")]),t._v(" "),n("li",[t._v("检查交易账户在Mempool中是否存在过多交易。")]),t._v(" "),n("li",[t._v("检查交易是否过期。")])]),t._v(" "),n("p",[t._v("具体可参考Mempool模块的代码："),n("a",{attrs:{href:"https://github.com/33cn/chain33/blob/master/mempool/check.go",target:"_blank"}},[t._v("点这里")])]),t._v(" "),n("h2",{attrs:{id:"mempool存储的数据结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mempool存储的数据结构"}},[t._v("#")]),t._v(" Mempool存储的数据结构")]),t._v(" "),n("p",[t._v("Mempool中主要定义了三种数据结构：txCache、Item和mempool。")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Module txCache")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" txCache "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tsize       "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("                             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//缓存大小，默认10240。")]),t._v("\n\ttxMap      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Element        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Key=string(txhash), Value= Item。")]),t._v("\n\ttxList     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("List                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//链表。")]),t._v("\n\ttxFrontTen "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Transaction            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//记录最新的10笔交易。")]),t._v("\n\taccMap     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Transaction "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//记录相应账户地址在mempool已经有多少笔交易了，同一个地址（tx.from)最多只有100笔。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Item为Mempool中包装交易的数据结构")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Item "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tvalue     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Transaction\n\tpriority  "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//优先级，这里是根据手续费划分等级。")]),t._v("\n\tenterTime "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//进入时间戳。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mempool数据结构")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Mempool "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tproxyMtx          sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mutex           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//互斥锁，用于支持后面mempool中的多个协程之间的并发操作 。")]),t._v("\n\tcache             "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("txCache             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//缓存，默认10240。")]),t._v("\n\tin                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("chan")]),t._v(" queue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Message   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对收到的msg进行的串行化处理,和out配合一起使用，主要处理EventTx消息。")]),t._v("\n\tout               "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("chan")]),t._v(" queue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Message "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对收到的msg进行的串行化处理,和in配合一起使用，主要处理EventTx消息。")]),t._v("\n\tclient            queue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Client         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//queue客户端，用于chain33内部各个模块之间的通信。")]),t._v("\n\theader            "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Header        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//存放最新的区块头信息。")]),t._v("\n\tminFee            "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最小手续费。")]),t._v("\n\taddedTxs          "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("lru"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cache           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//存放已经打包的tx hash信息。")]),t._v("\n\tsync              "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断blockchain是否同步,当区块没有同步的话，是没法成功往mempool发送新的交易的。")]),t._v("\n\tcfg               "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MemPool       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//mempool的配置。")]),t._v("\n\tpoolHeader        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("chan")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//暂时未用到，预留参数。")]),t._v("\n\tisclose           "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1表示关闭。")]),t._v("\n\twg                sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WaitGroup       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用来实现协程同步。")]),t._v("\n\tdone              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("chan")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//mempool是否完成也就是结束的一种信号。")]),t._v("\n\tremoveBlockTicket "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ticker         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定时清理已打包的tx 的定时器，默认一分钟。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br")])]),n("h2",{attrs:{id:"mempool消息处理逻辑"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mempool消息处理逻辑"}},[t._v("#")]),t._v(" Mempool消息处理逻辑")]),t._v(" "),n("ul",[n("li",[t._v("区块链底层各个模块都是通过Queue.client互相发送Message来通信的，具体可参加《Queue模块》。")]),t._v(" "),n("li",[t._v("Mempool中对其他模块发送过来的消息处理在"),n("code",[t._v("SetQueueClient()")]),t._v("方法中，下面通过伪代码来分析Mempool如何处理接收的消息。")])]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mem "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Mempool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetQueueClient")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client queue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tmem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client\n\tmem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sub")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mempool"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tmem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" mem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pollLastHeader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tmem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" mem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// go mem.ReTrySend()")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从badChan读取坏消息，并回复错误信息。")]),t._v("\n\tmem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipeLine")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tmlog"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Info")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mempool piple line start"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tmem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" mlog"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Info")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"piple line quit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" mem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Done")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" m "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v(" mem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tmem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定时移除已经打包过的tx。")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" mem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("RemoveBlockedTxs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tmem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" mlog"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Info")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mempool message recv quit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" mem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Done")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" msg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v(" mem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Recv")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tmlog"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Debug")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mempool recv"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"msgid"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"msg"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetEventName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tbeg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ty "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EventTx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// EventTx 消息类型，会由 rpc,p2p,wallet 模块发送这样类型的消息，同时附带一笔tx。")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\tmlog"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Debug")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mempool"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cost"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Since")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"msg"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetEventName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br")])]),n("p",[t._v("通过代码我们可以看到这里主要起几个进程，分别去执行"),n("code",[t._v("pollLastHeader")]),t._v("(获取最新的区块头信息)、"),n("code",[t._v("getSync")]),t._v("(获取mempool同步状态)、"),n("code",[t._v("pipeLine")]),t._v("(串行化任务)，另一个则是去处理client接收到的msg。")]),t._v(" "),n("h2",{attrs:{id:"mempool提供的接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mempool提供的接口"}},[t._v("#")]),t._v(" Mempool提供的接口")]),t._v(" "),n("p",[t._v("Mempool中提供了"),n("code",[t._v("GetLastMempool()")]),t._v("、"),n("code",[t._v("GetMempool()")]),t._v("、"),n("code",[t._v("SendTx()")]),t._v("、"),n("code",[t._v("GetTxList()")]),t._v("四个接口，供其他模块调用。")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 获取mempool中最新的10笔交易\n* @param： 无\n* @return：*types.ReplyTxList\n*/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// types.EventGetLastMempool")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetLastMempool")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReplyTxList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 获取mempool中的所有tx\n* @param： 无\n* @return：*types.ReplyTxList\n*/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// types.EventGetMempool")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetMempool")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReplyTxList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 往mempool中发送交易\n* @param： param *types.Transaction 签完名后的tx\n* @return：*types.Reply\n*/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 同步发送交易信息到指定模块，获取应答消息 types.EventTx")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SendTx")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Transaction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reply"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n*  根据传入的txHash过滤获取mempool中的tx\n* @param： param *types.TxHashList txhash\n* @return：*types.ReplyTxList\n*/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// types.EventTxList")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetTxList")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TxHashList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReplyTxList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);