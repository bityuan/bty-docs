(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{449:function(p,t,a){p.exports=a.p+"assets/img/DAPP_Components.c33a38f7.png"},450:function(p,t,a){p.exports=a.p+"assets/img/DApp_Development_Process.514d2828.png"},451:function(p,t,a){p.exports=a.p+"assets/img/DApp_Location.263b9762.png"},539:function(p,t,a){"use strict";a.r(t);var s=a(1),_=Object(s.a)({},(function(){var p=this,t=p.$createElement,s=p._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":p.$parent.slotKey}},[s("h1",{attrs:{id:"dapp开发介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dapp开发介绍"}},[p._v("#")]),p._v(" DAPP开发介绍")]),p._v(" "),s("blockquote",[s("p",[p._v("去中心化应用（DAPP）是在去中心化网络上构建的应用程序，是相对于传统中心化应用的一种叫法。传统中心化应用部署在中心化的服务器上，数据由一家公司或机构拥有；去中心化应用运行在去中心化的区块链网络上，数据不受任何人控制，无法删除与篡改。")])]),p._v(" "),s("h2",{attrs:{id:"dapp设计及开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dapp设计及开发"}},[p._v("#")]),p._v(" DApp设计及开发")]),p._v(" "),s("p",[p._v("一个典型的DApp组成如下：")]),p._v(" "),s("p",[s("img",{attrs:{src:a(449),alt:"DApp组成"}})]),p._v(" "),s("ul",[s("li",[s("p",[s("strong",[p._v("前端：")])]),p._v(" "),s("p",[p._v("用户端，可以是手机端App，也可以是网页，甚至可以是命令行，一般是直连区块链节点的RPC服务接口。")])]),p._v(" "),s("li",[s("p",[s("strong",[p._v("服务端（可选）：")])]),p._v(" "),s("p",[p._v("类似中心化应用的服务节点，这里主要是封装DApp自己的服务接口，下层对接区块链，上层对接用户端，为了更好的用户体验，也可能会做一些数据状态缓存。")])]),p._v(" "),s("li",[s("p",[s("strong",[p._v("区块链端：")])]),p._v(" "),s("p",[p._v("常规区块链节点，对前端或服务端提供区块链的操作接口服务，如发送交易、调用合约、查询结果等动作。")])])]),p._v(" "),s("p",[s("strong",[p._v("一个常规的DApp开发流程如下图所示：")])]),p._v(" "),s("p",[s("img",{attrs:{src:a(450),alt:"DApp开发流程"}})]),p._v(" "),s("p",[p._v("其实主要是包含前端和合约两部分内容的开发，合约最终是部署在区块链网络上的，为DApp的主要执行逻辑，前端为用户交互界面。")]),p._v(" "),s("p",[p._v("即使不用前端，使用区块链的命令行接口依然可以调用合约，实现DApp的完整逻辑，但是用户门槛太高，所以，一般正式的DApp都会提供前端。")]),p._v(" "),s("h2",{attrs:{id:"chain33中dapp的开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chain33中dapp的开发"}},[p._v("#")]),p._v(" Chain33中DApp的开发")]),p._v(" "),s("p",[p._v("Chain33是一个支持高度扩展的区块链开发平台，除了极少部分固有核心逻辑外，基本全部支持扩展定制；系统的扩展能力主要可以划分为两大类：")]),p._v(" "),s("p",[s("strong",[p._v("一类是对系统能力的扩充定制：")])]),p._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[p._v("Chain33提供了底层的插件管理机制，基本上系统的所有能力都是作为一个插件存在，插件的实现本身可以被替换，开发者可以使用系统自身提供的系统插件，也可以自己开发新的功能插件，这些插件的能力覆盖到加解密、共识、存储、钱包、执行器、命令行等各方面内容。\n")])])]),s("p",[s("strong",[p._v("一类是扩展应用的开发：")])]),p._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[p._v("Chain33基于插件机制之上，针对DApp也单独提供了一套框架，以方便开发者进行DApp的开发，将开发者的关注重点聚焦到核心的合约逻辑（即执行器逻辑），并增加RPC接口和命令行接口的辅助（后面两者不是必需）。\n")])])]),s("p",[p._v("可以看一下DApp在整个Chain33体系内所处的位置：")]),p._v(" "),s("p",[s("img",{attrs:{src:a(451),alt:"DApp Location"}})]),p._v(" "),s("p",[p._v("如图中左上部分所示，Chain33提供的DApp Framework中包含了三个元素：执行器、命令行和RPC，其中执行器就是DApp的合约逻辑；")]),p._v(" "),s("p",[p._v("命令行是提供命令行下的命令包装，这个一般可以不提供；")]),p._v(" "),s("p",[p._v("RPC是包装DApp特有的对外服务接口，一般情况下Chain33框架提供的交易的创建、发送、查询等通用接口，如果有特殊需要，DApp也可以在这里开发自己专用的RPC接口。")])])}),[],!1,null,null,null);t.default=_.exports}}]);