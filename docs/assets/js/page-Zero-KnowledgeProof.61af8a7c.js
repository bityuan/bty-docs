(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{454:function(t,e,a){t.exports=a.p+"assets/img/en-0zs.33361bec.png"},543:function(t,e,a){"use strict";a.r(e);var o=a(1),r=Object(o.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"zero-knowledge-proof"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#zero-knowledge-proof"}},[t._v("#")]),t._v(" Zero-Knowledge Proof")]),t._v(" "),o("blockquote",[o("p",[t._v("It adopts the zkSync solution to realize cross-chain and asset transfer. The overall structure is shown in the figure below, including the four modules: asset storage contract, asset receiving contract, Layer 1 monitoring module, and proof generation module. In the scheme, the chain where the asset is located is called Layer 1, and the asset receiving chain and the cross-chain module are called Layer 2.")])]),t._v(" "),o("p",[o("img",{attrs:{src:a(454),alt:"0知识1"}})]),t._v(" "),o("h2",{attrs:{id:"module-function-introduction"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#module-function-introduction"}},[t._v("#")]),t._v(" Module Function Introduction")]),t._v(" "),o("h3",{attrs:{id:"_1-asset-storage-contract"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-asset-storage-contract"}},[t._v("#")]),t._v(" 1. Asset storage contract")]),t._v(" "),o("p",[t._v("Deploying smart contract on Layer 1 to record assets transferred to Layer 2.")]),t._v(" "),o("h3",{attrs:{id:"_2-asset-receiving-contract"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-asset-receiving-contract"}},[t._v("#")]),t._v(" 2. Asset receiving contract")]),t._v(" "),o("p",[t._v("Deploying the smart contract on the Layer 2 blockchain to receive the assets transferred out of Layer 1, as well as operation records, such as asset transfer on Layer 2.")]),t._v(" "),o("h3",{attrs:{id:"_3-cross-chain-module"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3-cross-chain-module"}},[t._v("#")]),t._v(" 3. Cross-chain module")]),t._v(" "),o("ul",[o("li",[t._v("Layer 1 monitoring module, monitoring the transaction of Layer 1’s assets deposited into the asset storage contract, and initiating the transaction of assets deposited into the asset receiving contract on Layer 2.")]),t._v(" "),o("li",[t._v("Proof generation module, monitoring all operational transactions of assets in the asset receiving contract on Layer 2, using the zero-knowledge proof algorithm to generate compressed proof data, and submitting the compressed proof data to Layer 1's asset storage contract. That is, to synchronize Layer 2’s asset status to Layer 1’s asset storage contract.")])]),t._v(" "),o("h3",{attrs:{id:"_4-asset-storage-contract"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_4-asset-storage-contract"}},[t._v("#")]),t._v(" 4. Asset Storage Contract")]),t._v(" "),o("ul",[o("li",[t._v("Contract events, realizing the deposit and transfer of assets.")]),t._v(" "),o("li",[t._v("Contract events, verifying the proof submitted by the cross-chain module, and updating the asset status.")]),t._v(" "),o("li",[t._v("Contract events, realizing the forced retrieval of Layer 2 assets in the event of Layer 2 exceptions.")]),t._v(" "),o("li",[t._v("Contract docking, realizing docking with the asset contracts.")])]),t._v(" "),o("h3",{attrs:{id:"_5-asset-receiving-contract"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-asset-receiving-contract"}},[t._v("#")]),t._v(" 5. Asset Receiving Contract")]),t._v(" "),o("ul",[o("li",[t._v("Contract events, realizing the deposit of Layer 1 assets.")]),t._v(" "),o("li",[t._v("Contract events, realizing the return of assets to Layer 1.")]),t._v(" "),o("li",[t._v("Contract docking, authorizing business contracts to process assets.")])]),t._v(" "),o("h3",{attrs:{id:"_6-layer-1-monitoring-module"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_6-layer-1-monitoring-module"}},[t._v("#")]),t._v(" 6. Layer 1 Monitoring Module")]),t._v(" "),o("ul",[o("li",[t._v("Integrating the Layer 1 blockchain and managing the asset storage contracts docked on Layer 1 through configuration.")]),t._v(" "),o("li",[t._v("Event processing, monitoring the assets operation of the Layer 1 asset storage contract, producing the transaction of the Layer 2 asset receiving contract, and monitoring the correct execution of the transaction.")])]),t._v(" "),o("h3",{attrs:{id:"_7-proof-generation-module"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_7-proof-generation-module"}},[t._v("#")]),t._v(" 7. Proof Generation Module")]),t._v(" "),o("ul",[o("li",[t._v("The calculation of the zero-knowledge proof is large, and the proof generation module will be divided into three sub-modules, which include the asset operation extractor, proof generator, and proof sender.")]),t._v(" "),o("li",[t._v("The asset operation extractor extracts asset-related operations from the asset receiving contract extracted on the Layer 2 blockchain, processes them into the data format received by the proof generator, and sends them to the proof generator cluster.")]),t._v(" "),o("li",[t._v("The proof generator is designed as a cluster due to a large amount of calculation. It receives the data sent by the asset operation extractor, performs zero-knowledge proof verification off the chain, and produces proof. It produces data suitable for asset storage contracts to verify on the chain and sends the data to the proof sender.")]),t._v(" "),o("li",[t._v("The proof sender receives the verification data generated by the proof generator cluster and submits the data to Layer 1's asset storage contract in the form of transactions.")])])])}),[],!1,null,null,null);e.default=r.exports}}]);