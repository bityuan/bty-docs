(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{563:function(e,n,t){"use strict";t.r(n);var a=t(1),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"隐私保护"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#隐私保护"}},[e._v("#")]),e._v(" 隐私保护")]),e._v(" "),t("blockquote",[t("p",[e._v("数据的隐私保护是区块链的关键技术之一，传统的隐私保护方案一般都是使用非对称加密算法对数据加密上链，获取数据时再解密。这些方案仅仅解决数据单方面的隐私保存，而无法做到隐私数据的动态分享。Chain33使用代理重加密方案，结合存证合约，实现隐私数据的加密存储和动态分享。")])]),e._v(" "),t("h2",{attrs:{id:"代理重加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代理重加密"}},[e._v("#")]),e._v(" 代理重加密")]),e._v(" "),t("h3",{attrs:{id:"算法简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算法简介"}},[e._v("#")]),e._v(" 算法简介")]),e._v(" "),t("p",[e._v("代理重加密（Proxy Re-Encryption, PRE）是一种密钥转换算法，可以将数据所有人（owner）公钥加密的密文转换为另一种密文，转换的密文可以由被授权人（recipient）的私钥进行解密。密文转换过程由一个半可信的代理服务器（proxy）执行，在执行该过程前，代理节点需要持有一个由授权人到被授权人的转换密钥，一般由授权人提前生成并发送给代理节点。通过转换密钥无法直接解析密文，最终还需要被授权人的私钥才能解密，所以代理节点没办法获取到明文信息。")]),e._v(" "),t("h3",{attrs:{id:"功能组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能组件"}},[e._v("#")]),e._v(" 功能组件")]),e._v(" "),t("p",[e._v("chain33代理重加密功能组件包括：")]),e._v(" "),t("ul",[t("li",[e._v("代理重加密节点"),t("a",{attrs:{href:"https://github.com/33cn/chain33-pre",target:"_blank",rel:"noopener noreferrer"}},[e._v("chain33-pre"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("代理重加密接口"),t("a",{attrs:{href:"https://github.com/33cn/chain33-sdk-java/blob/master/%E8%81%94%E7%9B%9F%E9%93%BE%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E.md#%E4%BB%A3%E7%90%86%E9%87%8D%E5%8A%A0%E5%AF%86%E6%8E%A5%E5%8F%A3",target:"_blank",rel:"noopener noreferrer"}},[e._v("chain33-sdk"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("存证合约"),t("a",{attrs:{href:"https://github.com/33cn/plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("chain33"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"使用步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用步骤"}},[e._v("#")]),e._v(" 使用步骤")]),e._v(" "),t("ul",[t("li",[e._v("数据所有人（owner）将隐私数据加密，通过存证合约保存在区块链上。")]),e._v(" "),t("li",[e._v("数据所有人（owner）对被授权人（recipient）生成重加密转换秘钥。")]),e._v(" "),t("li",[e._v("数据所有人（owner）将转换秘钥分发到代理重加密节点（proxy）。")]),e._v(" "),t("li",[e._v("被授权人（recipient）在区块链上查询隐私数据。")]),e._v(" "),t("li",[e._v("被授权人（recipient）向重加密节点（proxy）申请重加密。")]),e._v(" "),t("li",[e._v("被授权人（recipient）解密数据。")])]),e._v(" "),t("h2",{attrs:{id:"使用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[e._v("#")]),e._v(" 使用方法")]),e._v(" "),t("h3",{attrs:{id:"环境搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境搭建"}},[e._v("#")]),e._v(" 环境搭建")]),e._v(" "),t("h4",{attrs:{id:"搭建平行链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建平行链"}},[e._v("#")]),e._v(" 搭建平行链")]),e._v(" "),t("p",[e._v("搭建方法："),t("a",{attrs:{href:"https://docs.bityuan.com/zh/guide/1.%E5%85%A5%E9%97%A8/2.%20Build%20parachain/",target:"_blank",rel:"noopener noreferrer"}},[e._v("搭建平行链"),t("OutboundLink")],1)]),e._v(" "),t("h4",{attrs:{id:"搭建代理重加密节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建代理重加密节点"}},[e._v("#")]),e._v(" 搭建代理重加密节点")]),e._v(" "),t("p",[t("strong",[e._v("软件包下载")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("wget https://bty33.oss-cn-shanghai.aliyuncs.com/chain33-Pre.tar.gz\ntar xzvf chain33-Pre.tar.gz\ncd chain33-Pre\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[t("strong",[e._v("配置")])]),e._v(" "),t("p",[e._v("根据实际情况配置服务端口和节点私钥。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('//对外重加密服务端口\nbindAddr=":11801"\n//节点操作私钥\npreServerKey="0x123456789abcdef0fedcba987654321"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[t("strong",[e._v("启动")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("./chain33-pre -f chain33.pre.toml\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h3",{attrs:{id:"sdk调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sdk调用"}},[e._v("#")]),e._v(" SDK调用")]),e._v(" "),t("p",[e._v("数据所有人(owner)")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('//生成账户\nAccountInfo alice = new AccountInfo();\nalice.setPrivateKey(OwnerPrivateKey);\nalice.setPublicKey(TransactionUtil.getHexPubKeyFromPrivKey(OwnerPrivateKey));\n// 生成对称秘钥\nEncryptKey encryptKey = PreUtils.GenerateEncryptKey(HexUtil.fromHexString(alice.getPublicKey()));\n// 生成重加密密钥分片\nKeyFrag[] kFrags = new KeyFrag[numSplit];\ntry {\n    kFrags = PreUtils.GenerateKeyFragments(HexUtil.fromHexString(alice.getPrivateKey()),\n            HexUtil.fromHexString(RecipientPubKey), numSplit, threshold);\n} catch (Exception e) {\n    e.printStackTrace();\n}\n// 密钥分片发送到代理节点\nString dhProof = PreUtils.ECDH(ServerPub, alice.getPrivateKey());\nfor(int i = 0; i < preClient.length; i++) {\n    boolean result = preClient[i].sendKeyFragment(alice.getPublicKey(), RecipientPubKey, encryptKey.getPubProofR(),\n            encryptKey.getPubProofU(), 100, dhProof, kFrags[i]);\n    if (!result) {\n        System.out.println("sendKeyFragment failed");\n        return;\n    }\n}\n// 数据加密\nbyte[] iv = AesUtil.generateIv();\nbyte[] cipher = AesUtil.encrypt(content, encryptKey.getShareKey(), iv);\nSystem.out.println(cipher);\n// 通过存证合约保存加密数据\nbyte[] contentHash;\ntry {\n    contentHash = TransactionUtil.Sha256(content.getBytes("utf-8"));\n} catch (UnsupportedEncodingException e) {\n    e.printStackTrace();\n    return;\n}\nString txEncode = StorageUtil.createEncryptNotaryStorage(cipher, contentHash, iv,\n        "chain33-storage-key-pre-"+kFrags[0].getPrecurPub(), "", "storage", OwnerPrivateKey);\nString submitTransaction = chain33Client.submitTransaction(txEncode);\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br"),t("span",{staticClass:"line-number"},[e._v("30")]),t("br"),t("span",{staticClass:"line-number"},[e._v("31")]),t("br"),t("span",{staticClass:"line-number"},[e._v("32")]),t("br"),t("span",{staticClass:"line-number"},[e._v("33")]),t("br"),t("span",{staticClass:"line-number"},[e._v("34")]),t("br"),t("span",{staticClass:"line-number"},[e._v("35")]),t("br"),t("span",{staticClass:"line-number"},[e._v("36")]),t("br"),t("span",{staticClass:"line-number"},[e._v("37")]),t("br"),t("span",{staticClass:"line-number"},[e._v("38")]),t("br"),t("span",{staticClass:"line-number"},[e._v("39")]),t("br")])]),t("p",[e._v("数据被授权人（recipient）")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('// 生成账户\nAccountInfo bob = new AccountInfo();\nbob.setPrivateKey(RecipientPrivateKey);\nbob.setPublicKey(TransactionUtil.getHexPubKeyFromPrivKey(RecipientPrivateKey));\n// 申请重加密，需要两边的公钥\nReKeyFrag[] reKeyFrags = new ReKeyFrag[threshold];\nfor(int i = 0; i < threshold; i++) {\n    reKeyFrags[i] = preClient[i].reencrypt(OwnerPubKey, bob.getPublicKey());\n}\n// 解密对称密钥，需要被授权人私钥\nbyte[] shareKeyBob;\ntry {\n    shareKeyBob = PreUtils.AssembleReencryptFragment(HexUtil.fromHexString(bob.getPrivateKey()), reKeyFrags);\n} catch (Exception e) {\n    e.printStackTrace();\n    return;\n}\n// 从链上获取密文\nJSONObject resultJson = chain33Client.queryStorage("chain33-storage-key-pre-"+reKeyFrags[0].getPrecurPub());\nJSONObject resultArray = resultJson.getJSONObject("encryptStorage");\nString content = resultArray.getString("encryptContent");\nbyte[] fromHexString = HexUtil.fromHexString(content);\n// 解密\nString text = AesUtil.decrypt(fromHexString, HexUtil.toHexString(shareKeyBob));\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br")])]),t("p",[e._v("详细示例，请参考"),t("a",{attrs:{href:"https://github.com/33cn/chain33-sdk-java/blob/master/src/test/java/cn/chain33/javasdk/model/PreOwner.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("PreOwner"),t("OutboundLink")],1),e._v("和"),t("a",{attrs:{href:"https://github.com/33cn/chain33-sdk-java/blob/master/src/test/java/cn/chain33/javasdk/model/PreRecipient.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("PreRecipient"),t("OutboundLink")],1),e._v("。")])])}),[],!1,null,null,null);n.default=s.exports}}]);